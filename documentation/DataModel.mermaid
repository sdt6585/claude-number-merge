classDiagram
    class GameState {
        grid: Array(rows)Ã—Array(cols)
        level: Number
        score: Number
        selectedBlocks: Array
        currentMergeValue: Number
        availableValues: Array
        highestValue: Number
        undoAvailable: Boolean
        turnsUntilUndoAvailable: Number
        previousState: Object
        colorIndex: Number
        animationsInProgress: Number
        isInteractive: Boolean
    }
    
    class Block {
        value: Number
        element: HTMLElement
        row: Number
        col: Number
    }
    
    class PreviousState {
        grid: Array
        score: Number
        level: Number
        highestValue: Number
        availableValues: Array
        colorIndex: Number
    }
    
    class SerializedBlock {
        value: Number
        row: Number
        col: Number
    }
    
    GameState "1" --* "many" Block : contains
    GameState "1" --> "0..1" PreviousState : stores
    PreviousState "1" --* "many" SerializedBlock : contains
    
    note for GameState "Main state object\nHolds all game data"
    note for Block "Represents a block in the grid\nContains value and DOM reference"
    note for PreviousState "Used for undo functionality\nStores previous game state"
    note for SerializedBlock "Serializable version of Block\nFor storage/undo"